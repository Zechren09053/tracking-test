<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Digital QR ID System</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.4/html5-qrcode.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
            color: #333;
        }
        
        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background-color: #3498db;
            color: white;
            padding: 20px;
            text-align: center;
            border-radius: 8px 8px 0 0;
            margin-bottom: 20px;
        }
        
        .tabs {
            display: flex;
            margin-bottom: 20px;
        }
        
        .tab {
            padding: 12px 20px;
            cursor: pointer;
            background-color: #e0e0e0;
            transition: all 0.3s ease;
            border-radius: 5px 5px 0 0;
            margin-right: 5px;
        }
        
        .tab.active {
            background-color: #3498db;
            color: white;
        }
        
        .tab-content {
            display: none;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .tab-content.active {
            display: block;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
        }
        
        input, select {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        
        button {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }
        
        button:hover {
            background-color: #2980b9;
        }
        
        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            margin-top: 20px;
            background-color: white;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .user-card {
            display: flex;
            margin-bottom: 20px;
        }
        
        .user-info {
            flex: 2;
            padding-right: 20px;
        }
        
        .qr-code {
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .scanner-container {
            width: 100%;
            max-width: 500px;
            margin: 0 auto;
        }
        
        .result-container {
            margin-top: 20px;
        }
        
        .user-result {
            background-color: #f9f9f9;
            border-radius: 8px;
            padding: 15px;
            margin-top: 15px;
            border-left: 5px solid #3498db;
        }
        
        .status {
            padding: 5px 10px;
            border-radius: 4px;
            display: inline-block;
            margin-top: 5px;
        }
        
        .status-active {
            background-color: #2ecc71;
            color: white;
        }
        
        .status-expired {
            background-color: #e74c3c;
            color: white;
        }
        
        .image-preview {
            width: 150px;
            height: 150px;
            border: 2px dashed #ddd;
            border-radius: 50%;
            margin: 10px 0;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }
        
        .image-preview img {
            max-width: 100%;
            max-height: 100%;
        }
        
        .user-list {
            max-height: 400px;
            overflow-y: auto;
            margin-top: 20px;
        }
        
        .user-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
            cursor: pointer;
        }
        
        .user-item:hover {
            background-color: #f5f5f5;
        }
        
        .user-item-img {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            margin-right: 15px;
            object-fit: cover;
        }
        
        .user-item-info {
            flex-grow: 1;
        }
        
        .user-item-name {
            font-weight: bold;
        }
        
        .search-box {
            margin-bottom: 15px;
        }
        
        #reader {
            width: 100%;
        }
        
        .error {
            color: red;
            font-size: 0.9em;
            margin-top: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Digital QR ID System</h1>
            <p>Register, Generate and Scan QR ID Cards</p>
        </div>
        
        <div class="tabs">
            <div class="tab active" onclick="openTab('register')">Register</div>
            <div class="tab" onclick="openTab('view')">View IDs</div>
            <div class="tab" onclick="openTab('scan')">Scan QR Code</div>
        </div>
        
        <div id="register" class="tab-content active">
            <h2>Register New User</h2>
            <form id="registration-form">
                <div class="form-group">
                    <label for="full_name">Full Name</label>
                    <input type="text" id="full_name" name="full_name" required>
                </div>
                
                <div class="form-group">
                    <label for="birth_date">Date of Birth</label>
                    <input type="date" id="birth_date" name="birth_date" required>
                </div>
                
                <div class="form-group">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email" required>
                    <div id="email-error" class="error"></div>
                </div>
                
                <div class="form-group">
                    <label for="phone_number">Phone Number</label>
                    <input type="tel" id="phone_number" name="phone_number" required>
                </div>
                
                <div class="form-group">
                    <label for="expires_at">Expiration Date</label>
                    <input type="date" id="expires_at" name="expires_at" required>
                </div>
                
                <div class="form-group">
                    <label for="profile_image">Profile Image</label>
                    <input type="file" id="profile_image" name="profile_image" accept="image/*">
                    <div class="image-preview" id="image-preview">
                        <span>No image selected</span>
                    </div>
                </div>
                
                <button type="submit">Register & Generate QR Code</button>
            </form>
            
            <div id="registration-result" class="card" style="display: none;">
                <h3>Registration Successful</h3>
                <div class="user-card">
                    <div class="user-info">
                        <h3 id="card-name"></h3>
                        <p><strong>Email:</strong> <span id="card-email"></span></p>
                        <p><strong>Phone:</strong> <span id="card-phone"></span></p>
                        <p><strong>DOB:</strong> <span id="card-dob"></span></p>
                        <p><strong>Issued:</strong> <span id="card-issued"></span></p>
                        <p><strong>Expires:</strong> <span id="card-expires"></span></p>
                        <div>
                            <span class="status status-active">ACTIVE</span>
                        </div>
                    </div>
                    <div class="qr-code">
                        <div id="qrcode"></div>
                    </div>
                </div>
                <button onclick="printCard()">Print ID Card</button>
                <button onclick="resetForm()">Register Another</button>
            </div>
        </div>
        
        <div id="view" class="tab-content">
            <h2>View Registered IDs</h2>
            <div class="search-box">
                <input type="text" id="search-input" placeholder="Search by name or email..." onkeyup="searchUsers()">
            </div>
            
            <div class="user-list" id="user-list">
                <!-- User items will be generated here -->
            </div>
            
            <div id="user-details" class="card" style="display: none;">
                <h3>User Details</h3>
                <div class="user-card">
                    <div class="user-info">
                        <h3 id="details-name"></h3>
                        <p><strong>Email:</strong> <span id="details-email"></span></p>
                        <p><strong>Phone:</strong> <span id="details-phone"></span></p>
                        <p><strong>DOB:</strong> <span id="details-dob"></span></p>
                        <p><strong>Issued:</strong> <span id="details-issued"></span></p>
                        <p><strong>Expires:</strong> <span id="details-expires"></span></p>
                        <p><strong>Last Used:</strong> <span id="details-last-used"></span></p>
                        <div id="details-status-container">
                            <span id="details-status" class="status"></span>
                        </div>
                    </div>
                    <div class="qr-code">
                        <div id="details-qrcode"></div>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="scan" class="tab-content">
            <h2>Scan QR Code</h2>
            <div class="scanner-container">
                <div id="reader"></div>
                <button id="start-scanner" onclick="startScanner()">Start Scanner</button>
                
                <div class="result-container" id="scan-result" style="display: none;">
                    <h3>Scan Result</h3>
                    <div class="user-result">
                        <h3 id="result-name"></h3>
                        <p><strong>Email:</strong> <span id="result-email"></span></p>
                        <p><strong>Phone:</strong> <span id="result-phone"></span></p>
                        <p><strong>DOB:</strong> <span id="result-dob"></span></p>
                        <p><strong>Issued:</strong> <span id="result-issued"></span></p>
                        <p><strong>Expires:</strong> <span id="result-expires"></span></p>
                        <p><strong>Last Used:</strong> <span id="result-last-used"></span></p>
                        <div>
                            <span id="result-status" class="status"></span>
                        </div>
                    </div>
                    <button onclick="closeResult()">Scan Another</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Store users in localStorage (in a real app, this would be a database)
        let users = JSON.parse(localStorage.getItem('qr_id_users')) || [];
        let html5QrCode;
        
        // Initialize the application
        document.addEventListener('DOMContentLoaded', function() {
            // Handle form submission
            document.getElementById('registration-form').addEventListener('submit', function(e) {
                e.preventDefault();
                registerUser();
            });
            
            // Handle image preview
            document.getElementById('profile_image').addEventListener('change', function(e) {
                const preview = document.getElementById('image-preview');
                preview.innerHTML = '';
                
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        preview.appendChild(img);
                    }
                    reader.readAsDataURL(this.files[0]);
                } else {
                    preview.innerHTML = '<span>No image selected</span>';
                }
            });
            
            // Display users
            populateUserList();
        });
        
        // Open tab
        function openTab(tabName) {
            // Hide all tab content
            const tabContents = document.getElementsByClassName('tab-content');
            for (let i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.remove('active');
            }
            
            // Remove active class from all tabs
            const tabs = document.getElementsByClassName('tab');
            for (let i = 0; i < tabs.length; i++) {
                tabs[i].classList.remove('active');
            }
            
            // Show the selected tab content
            document.getElementById(tabName).classList.add('active');
            
            // Find and activate the selected tab
            const selectedTab = Array.from(document.getElementsByClassName('tab')).find(tab => {
                return tab.getAttribute('onclick').includes(tabName);
            });
            
            if (selectedTab) {
                selectedTab.classList.add('active');
            }
            
            // If scan tab is selected, initialize scanner
            if (tabName === 'scan') {
                document.getElementById('scan-result').style.display = 'none';
                document.getElementById('start-scanner').style.display = 'block';
            }
        }
        
        // Generate a unique ID
        function generateUniqueId() {
            return Date.now().toString(36) + Math.random().toString(36).substr(2);
        }
        
        // Format date for display
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString();
        }
        
        // Format datetime for display
        function formatDateTime(dateString) {
            if (!dateString) return 'Never';
            const date = new Date(dateString);
            return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
        }
        
        // Check if a user with the given email already exists
        function isEmailTaken(email) {
            return users.some(user => user.email === email);
        }
        
        // Register a new user
        function registerUser() {
            const fullName = document.getElementById('full_name').value;
            const birthDate = document.getElementById('birth_date').value;
            const email = document.getElementById('email').value;
            const phoneNumber = document.getElementById('phone_number').value;
            const expiresAt = document.getElementById('expires_at').value;
            
            // Validate email uniqueness
            if (isEmailTaken(email)) {
                document.getElementById('email-error').textContent = 'This email is already registered';
                return;
            } else {
                document.getElementById('email-error').textContent = '';
            }
            
            // Get profile image if available
            let profileImage = null;
            const imagePreview = document.getElementById('image-preview');
            if (imagePreview.querySelector('img')) {
                profileImage = imagePreview.querySelector('img').src;
            }
            
            // Generate QR code data
            const qrCodeId = generateUniqueId();
            
            // Create new user object
            const user = {
                id: users.length + 1,
                full_name: fullName,
                birth_date: birthDate,
                profile_image: profileImage,
                email: email,
                phone_number: phoneNumber,
                qr_code_data: qrCodeId,
                issued_at: new Date().toISOString(),
                expires_at: new Date(expiresAt).toISOString(),
                is_active: 1,
                last_used: null,
                created_at: new Date().toISOString()
            };
            
            // Add user to the array
            users.push(user);
            
            // Save to localStorage
            localStorage.setItem('qr_id_users', JSON.stringify(users));
            
            // Display the QR code and user card
            displayUserCard(user);
            
            // Update user list
            populateUserList();
        }
        
        // Display user card with QR code
        function displayUserCard(user) {
            // Hide the form
            document.getElementById('registration-form').style.display = 'none';
            
            // Show the result
            const resultCard = document.getElementById('registration-result');
            resultCard.style.display = 'block';
            
            // Fill in user details
            document.getElementById('card-name').textContent = user.full_name;
            document.getElementById('card-email').textContent = user.email;
            document.getElementById('card-phone').textContent = user.phone_number;
            document.getElementById('card-dob').textContent = formatDate(user.birth_date);
            document.getElementById('card-issued').textContent = formatDateTime(user.issued_at);
            document.getElementById('card-expires').textContent = formatDate(user.expires_at);
            
            // Generate QR code
            const qrCodeData = JSON.stringify({
                id: user.id,
                qr_code_data: user.qr_code_data
            });
            
            const qrCodeElement = document.getElementById('qrcode');
            qrCodeElement.innerHTML = '';
            
            new QRCode(qrCodeElement, {
                text: qrCodeData,
                width: 128,
                height: 128
            });
        }
        
        // Reset the registration form
        function resetForm() {
            document.getElementById('registration-form').reset();
            document.getElementById('image-preview').innerHTML = '<span>No image selected</span>';
            document.getElementById('registration-form').style.display = 'block';
            document.getElementById('registration-result').style.display = 'none';
        }
        
        // Populate the user list
        function populateUserList() {
            const userList = document.getElementById('user-list');
            userList.innerHTML = '';
            
            if (users.length === 0) {
                userList.innerHTML = '<p>No users registered yet.</p>';
                return;
            }
            
            // Sort users by creation date (newest first)
            users.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));
            
            users.forEach(user => {
                const userItem = document.createElement('div');
                userItem.className = 'user-item';
                userItem.onclick = () => showUserDetails(user);
                
                // Create profile image
                const img = document.createElement('img');
                img.className = 'user-item-img';
                img.src = user.profile_image || '/api/placeholder/50/50';
                img.alt = user.full_name;
                
                // Create user info
                const infoDiv = document.createElement('div');
                infoDiv.className = 'user-item-info';
                
                const nameDiv = document.createElement('div');
                nameDiv.className = 'user-item-name';
                nameDiv.textContent = user.full_name;
                
                const emailDiv = document.createElement('div');
                emailDiv.textContent = user.email;
                
                infoDiv.appendChild(nameDiv);
                infoDiv.appendChild(emailDiv);
                
                // Create status badge
                const statusSpan = document.createElement('span');
                const isActive = user.is_active && new Date(user.expires_at) > new Date();
                statusSpan.className = `status ${isActive ? 'status-active' : 'status-expired'}`;
                statusSpan.textContent = isActive ? 'ACTIVE' : 'EXPIRED';
                
                userItem.appendChild(img);
                userItem.appendChild(infoDiv);
                userItem.appendChild(statusSpan);
                
                userList.appendChild(userItem);
            });
        }
        
        // Show user details
        function showUserDetails(user) {
            const detailsCard = document.getElementById('user-details');
            detailsCard.style.display = 'block';
            
            // Fill in user details
            document.getElementById('details-name').textContent = user.full_name;
            document.getElementById('details-email').textContent = user.email;
            document.getElementById('details-phone').textContent = user.phone_number;
            document.getElementById('details-dob').textContent = formatDate(user.birth_date);
            document.getElementById('details-issued').textContent = formatDateTime(user.issued_at);
            document.getElementById('details-expires').textContent = formatDate(user.expires_at);
            document.getElementById('details-last-used').textContent = formatDateTime(user.last_used);
            
            // Set status
            const isActive = user.is_active && new Date(user.expires_at) > new Date();
            const statusElement = document.getElementById('details-status');
            statusElement.className = `status ${isActive ? 'status-active' : 'status-expired'}`;
            statusElement.textContent = isActive ? 'ACTIVE' : 'EXPIRED';
            
            // Generate QR code
            const qrCodeData = JSON.stringify({
                id: user.id,
                qr_code_data: user.qr_code_data
            });
            
            const qrCodeElement = document.getElementById('details-qrcode');
            qrCodeElement.innerHTML = '';
            
            new QRCode(qrCodeElement, {
                text: qrCodeData,
                width: 128,
                height: 128
            });
        }
        
        // Search users
        function searchUsers() {
            const searchTerm = document.getElementById('search-input').value.toLowerCase();
            
            // Filter users
            const filteredUsers = users.filter(user => {
                return user.full_name.toLowerCase().includes(searchTerm) || 
                       user.email.toLowerCase().includes(searchTerm);
            });
            
            // Clear the current list
            const userList = document.getElementById('user-list');
            userList.innerHTML = '';
            
            if (filteredUsers.length === 0) {
                userList.innerHTML = '<p>No matching users found.</p>';
                return;
            }
            
            // Display filtered users
            filteredUsers.forEach(user => {
                const userItem = document.createElement('div');
                userItem.className = 'user-item';
                userItem.onclick = () => showUserDetails(user);
                
                // Create profile image
                const img = document.createElement('img');
                img.className = 'user-item-img';
                img.src = user.profile_image || '/api/placeholder/50/50';
                img.alt = user.full_name;
                
                // Create user info
                const infoDiv = document.createElement('div');
                infoDiv.className = 'user-item-info';
                
                const nameDiv = document.createElement('div');
                nameDiv.className = 'user-item-name';
                nameDiv.textContent = user.full_name;
                
                const emailDiv = document.createElement('div');
                emailDiv.textContent = user.email;
                
                infoDiv.appendChild(nameDiv);
                infoDiv.appendChild(emailDiv);
                
                // Create status badge
                const statusSpan = document.createElement('span');
                const isActive = user.is_active && new Date(user.expires_at) > new Date();
                statusSpan.className = `status ${isActive ? 'status-active' : 'status-expired'}`;
                statusSpan.textContent = isActive ? 'ACTIVE' : 'EXPIRED';
                
                userItem.appendChild(img);
                userItem.appendChild(infoDiv);
                userItem.appendChild(statusSpan);
                
                userList.appendChild(userItem);
            });
        }
        
        // Start the QR scanner
        function startScanner() {
            document.getElementById('start-scanner').style.display = 'none';
            
            html5QrCode = new Html5Qrcode("reader");
            const qrCodeSuccessCallback = (decodedText, decodedResult) => {
                // Stop scanning
                html5QrCode.stop().then(() => {
                    processQrCode(decodedText);
                }).catch((err) => {
                    console.error(err);
                });
            };
            
            const config = { fps: 10, qrbox: { width: 250, height: 250 } };
            
            html5QrCode.start({ facingMode: "environment" }, config, qrCodeSuccessCallback);
        }
        
        // Process QR code data
        function processQrCode(decodedText) {
            try {
                const qrData = JSON.parse(decodedText);
                
                // Find the user with matching qr_code_data
                const user = users.find(u => u.id === qrData.id && u.qr_code_data === qrData.qr_code_data);
                
                if (user) {
                    // Update last used
                    user.last_used = new Date().toISOString();
                    localStorage.setItem('qr_id_users', JSON.stringify(users));
                    
                    // Display user info
                    displayScanResult(user);
                } else {
                    alert("Invalid QR Code! User not found.");
                    document.getElementById('start-scanner').style.display = 'block';
                }
            } catch (error) {
                alert("Invalid QR Code format!");
                document.getElementById('start-scanner').style.display = 'block';
            }
        }
        
        // Display scan result
        function displayScanResult(user) {
            const scanResult = document.getElementById('scan-result');
            scanResult.style.display = 'block';
            
            // Fill in user details
            document.getElementById('result-name').textContent = user.full_name;
            document.getElementById('result-email').textContent = user.email;
            document.getElementById('result-phone').textContent = user.phone_number;
            document.getElementById('result-dob').textContent = formatDate(user.birth_date);
            document.getElementById('result-issued').textContent = formatDateTime(user.issued_at);
            document.getElementById('result-expires').textContent = formatDate(user.expires_at);
            document.getElementById('result-last-used').textContent = formatDateTime(user.last_used);
            
            // Set status
            const isActive = user.is_active && new Date(user.expires_at) > new Date();
            const statusElement = document.getElementById('result-status');
            statusElement.className = `status ${isActive ? 'status-active' : 'status-expired'}`;
            statusElement.textContent = isActive ? 'ACTIVE' : 'EXPIRED';
        }
        
        // Close the scan result
        function closeResult() {
            document.getElementById('scan-result').style.display = 'none';
            document.getElementById('start-scanner').style.display = 'block';
        }
        
        // Print user card
        function printCard() {
            const cardContent = document.getElementById('registration-result').cloneNode(true);
            
            // Remove buttons
            const buttons = cardContent.querySelectorAll('button');
            buttons.forEach(button => button.remove());
            
            // Create a new window for printing
            const printWindow = window.open('', '_blank');
            printWindow.document.write('<html><head><title>ID Card</title>');
            
            // Add styles
            printWindow.document.write(`
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        padding: 20px;
                    }
                    .card {
                        border: 2px solid #000;
                        border-radius: 10px;
                        padding: 20px;
                        width: 400px;
                        margin: 0 auto;
                    }
                    .user-card {
                        display: flex;
                    }
                    .user-info {
                        flex: 2;
                    }
                    .qr-code {
                        flex: 1;
                        display: flex;
                        justify-content: center;
                        align-items: center;
                    }
                    .status {
                        padding: 5px 10px;
                        border-radius: 4px;
                        display: inline-block;
                        margin-top: 5px;
                    }
                    .status-active {
                        background-color: #2ecc71;
                        color: white;
                    }
                </style>
            `);
            
            printWindow.document.write('</head><body>');
            printWindow.document.write('<h2 style="text-align: center;">Official ID Card</h2>');
            printWindow.document.write(cardContent.innerHTML);
            printWindow.document.write('</body></html>');
            
            printWindow.document.close();
            printWindow.focus();
            
            // Print after a short delay to ensure content is loaded
            setTimeout(() => {
                printWindow.print();
            }, 500);
        }
    </script>
</body>
</html>